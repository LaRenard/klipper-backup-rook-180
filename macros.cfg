# #------------------------------------------------------------------- PRINTING START/END -------------------------------------------------------------------

[gcode_macro PRINT_START]
gcode:
  # Parameters
  {% set bed_temp = params.BED|default(50) %}
  {% set hotend_temp = params.HOTEND|default(200) %}
  {% set z_adjust = params.Z_ADJUST|default(0.0)|float %}

  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=0                               ; cancel off timer (if there is one)
  # Start bed heating
  M117 Heating bed
  M140 S{bed_temp}
  # Start nozzle heating
  M117 Heating nozzle
  M104 S100
  _CG28                                                                                ; home all axes
  G90                                                                                  ; absolute positioning
  BED_MESH_CLEAR                                                                       ; clear bed mesh
  ATTACH_PROBE_LOCK                                                                    ; attach klicky + lock
  G28 Z                                                                                ; home z
  G90                                                                                  ; absolute positioning
  M190 S{bed_temp}
  _CZTILT
  BED_MESH_CALIBRATE
  G0 Z20                                                                               ; hop up to prevent knocking probe off after homing Z
  G28 Z                                                                                ; home z again
  G0 Z20                                                                               ; hop up to prevent knocking probe off after homing Z
  DOCK_PROBE_UNLOCK
  SET_GCODE_OFFSET Z_ADJUST={z_adjust} MOVE=1
  M109 S{hotend_temp}                                                                  ; set & wait for hotend final temp
  G92 E0                                                                               ; reset Extruder
  G1 X0.1 Y20 Z0.3 F3000.0                                                             ; move to start position
  G1 X0.1 Y200.0 Z0.3 F1500.0 E15                                                      ; draw the first line
  G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
  G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
  G92 E0                                                                               ; reset Extruder
  G1 X4 Z2.0 F3000  

[gcode_macro PRINT_END]
description: Do things when print ends
gcode:
  # Move nozzle away from print while retracting
  G91
  # Raise nozzle and retract
  G1 E-2 F1800
  G1 Z15 F3000
  # Move to absolute position
  G90
  G0 X120 Y220 Z130 F2000
  M117 Print complete
  # POWER_OFF_PRINTER
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=120


# #------------------------------------------------------------------- Useful Macros -------------------------------------------------------------------

[gcode_macro PARKFRONT]
gcode:
  _CG28
  SAVE_GCODE_STATE NAME=PARKFRONT
  G90
  G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+15} Z{printer.toolhead.axis_maximum.z/3} F19500        
  RESTORE_GCODE_STATE NAME=PARKFRONT


# Park at center of build volume
[gcode_macro PARKCENTER]
gcode:
  _CG28                               ; home if not already homed
  SAVE_GCODE_STATE NAME=PARKCENTER
  G90                                 ; absolute positioning
  G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/3} F6000    
  RESTORE_GCODE_STATE NAME=PARKCENTER


[gcode_macro AUTO_BED_MESH]
gcode:
  _CG28 
  BED_MESH_CALIBRATE

[gcode_macro CALIBRATE_BED_LEVEL]
gcode:
  _CG28                   ; home if not already homed
  ATTACH_PROBE_LOCK       ; Attach Klicky and lock
  _CZTILT                 ; Conditional Z Tilt Adjust
  BED_MESH_CALIBRATE      ; Bed Mesh
  DOCK_PROBE_UNLOCK       ; Dock Klicky and unlock

[gcode_macro ZTILT_ADJUST]
gcode:  
  _CG28
  ATTACH_PROBE_LOCK
  _CZTILT  
  
# #------------------------------------------------------------------- Printer Control -------------------------------------------------------------------

[gcode_macro _CG28] ; Conditional Homing, only home if not already completed.
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

[gcode_macro _CZTILT] ; Conditional ZTilt, only do ZTilT Adjust if not already completed.
gcode:
    {% if printer.z_tilt.applied == False %}
        Z_TILT_ADJUST
        G28 Z
    {% endif %}

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro M600] 
description: Run these steps when Colour Change triggered
gcode: 
  SAVE_GCODE_STATE NAME=M600_state 
  PAUSE 
  UNLOAD_FILAMENT 
  M300 P3000
  RESTORE_GCODE_STATE NAME=M600_state

# #------------------------------------------------------------------- FILAMENT LOADING -------------------------------------------------------------------
[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=UNLOADFILAMENT
    M83                                   ; set extruder to relative
    G1 E10 F600                           ; extrude a little to soften tip 
    G1 E-50 F1800                         ; retract filament completely
    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOADFILAMENT
    M83 ; set extruder to relative
    G1 E90 F600
    RESTORE_GCODE_STATE NAME=LOADFILAMENT

[gcode_macro HOT_UNLOAD_FILAMENT]
gcode:
    # Parameters
    {% set extruder_temp = params.EXTRUDER_TEMP|default(200) %}
    
    M104 S{extruder_temp}
    PARKFRONT
    M109 S{extruder_temp}
    UNLOAD_FILAMENT
    
[gcode_macro HOT_LOAD_FILAMENT]
gcode:
    # Parameters
    {% set extruder_temp = params.EXTRUDER_TEMP|default(200) %}
    
    M104 S{extruder_temp}
    PARKFRONT
    M109 S{extruder_temp}
    LOAD_FILAMENT

# #------------------------------------------------------------------- Printer off -------------------------------------------------------------------
[idle_timeout]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91                                                                                                 ; relative positioning
        G1 Z140 F18000.0                                                                                      ; move bed down to near max
        G90                                                                                                 ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} F18000.0                   ; park nozzle at rear
    {% endif %}
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60

[delayed_gcode delayed_printer_off]
gcode:
    OFF ; call "OFF" macro, to turn off everything (heaters, motors, lights, fans)
    
[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off

#------------------------------------------------------------------- Homimg Control (Klicky) -------------------------------------------------------------------
[gcode_macro _HOME_X]
gcode:
    {% set default_x_run = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set default_y_run = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set homing_speed = printer.configfile.settings['stepper_x'].homing_speed|float %}
    {% set homing_current_x = 0.6 %}
    {% set homing_current_y = 0.6 %}


    {% if not 'y' in printer.toolhead.homed_axes %}                 # Check if Y has not been homed
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={homing_current_x}      # Set driver current for homing
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={homing_current_y}      # Set driver current for homing
    {% endif %}

    G28 X                                                           # Home X Axis

    {% if 'y' in printer.toolhead.homed_axes %}                     # Check if Y has been homed
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={default_x_run}       # Set driver current to default
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={default_y_run}       # Set driver current to default
    {% endif %}

[gcode_macro _HOME_Y]
gcode:
    {% set default_x_run = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set default_y_run = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set homing_speed = printer.configfile.settings['stepper_y'].homing_speed|float %}
    {% set homing_current_x = 0.6 %}
    {% set homing_current_y = 0.6 %}


    {% if not 'x' in printer.toolhead.homed_axes %}                     # Check if X has not been homed
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={homing_current_x}      # Set driver current for homing
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={homing_current_y}      # Set driver current for homing
    {% endif %}

    G28 Y                                                           # Home Y Axis

    {% if 'x' in printer.toolhead.homed_axes %}                     # Check if X has been homed
        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={default_x_run}       # Set driver current to default
        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={default_y_run}       # Set driver current to default
    {% endif %}

#------------------------------------------------------------------- Klipper Backups -------------------------------------------------------------------
[gcode_shell_command backup_cfg]
command: /usr/bin/bash /home/pi/printer_data/config/autocommit.sh
timeout: 30
verbose: True

[gcode_macro BACKUP_CFG]
description: Backs up config directory GitHub
gcode:
  RUN_SHELL_COMMAND CMD=backup_cfg
